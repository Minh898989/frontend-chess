import React, { useState, useEffect } from "react";
import axios from "axios";
import "../styles/Friends.css";

const API_BASE = "https://backend-chess-fjr7.onrender.com/api";

function Friends() {
  const user = JSON.parse(localStorage.getItem("user"));
  const [friends, setFriends] = useState([]);
  const [requests, setRequests] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchResult, setSearchResult] = useState(null);
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");

  // L·∫•y danh s√°ch b·∫°n b√®
  useEffect(() => {
    if (!user?.userid) return;
    axios
      .get(`${API_BASE}/friends/${user.userid}`)
      .then((res) => setFriends(res.data || []))
      .catch(() => setError("Kh√¥ng th·ªÉ t·∫£i danh s√°ch b·∫°n b√®."));
  }, [user]);

  // L·∫•y danh s√°ch l·ªùi m·ªùi k·∫øt b·∫°n
  useEffect(() => {
    if (!user?.userid) return;
    axios
      .get(`${API_BASE}/requests/${user.userid}`)
      .then((res) => setRequests(res.data || []))
      .catch(() => setError("Kh√¥ng th·ªÉ t·∫£i l·ªùi m·ªùi k·∫øt b·∫°n."));
  }, [user]);

  // T√¨m ki·∫øm ng∆∞·ªùi d√πng theo ID
  const handleSearch = async () => {
    setError("");
    setSuccess("");
    setSearchResult(null);

    if (!searchText.trim()) return;

    try {
      const res = await axios.post(`${API_BASE}/search`, {
        userid: searchText.trim(),
      });

      if (res.data.userid === user.userid) {
        setError("Kh√¥ng th·ªÉ th√™m ch√≠nh b·∫°n.");
      } else {
        setSearchResult(res.data);
      }
    } catch {
      setError("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.");
    }
  };

  // G·ª≠i l·ªùi m·ªùi k·∫øt b·∫°n
  const handleAddFriend = async () => {
    if (!searchResult) return;

    try {
      await axios.post(`${API_BASE}/send-request`, {
        senderId: user.userid,
        receiverId: searchResult.userid,
      });
      setSuccess("ƒê√£ g·ª≠i l·ªùi m·ªùi k·∫øt b·∫°n.");
      setSearchResult(null);
      setSearchText("");
    } catch {
      setError("Kh√¥ng th·ªÉ g·ª≠i l·ªùi m·ªùi k·∫øt b·∫°n.");
    }
  };

  // Ch·∫•p nh·∫≠n ho·∫∑c t·ª´ ch·ªëi l·ªùi m·ªùi
  const handleRespond = async (requestId, action) => {
    try {
      await axios.post(`${API_BASE}/respond`, { requestId, action });

      setRequests((prev) => prev.filter((r) => r.id !== requestId));

      if (action === "accept") {
        const res = await axios.get(`${API_BASE}/friends/${user.userid}`);
        setFriends(res.data || []);
      }

      setSuccess(`ƒê√£ ${action === "accept" ? "ch·∫•p nh·∫≠n" : "t·ª´ ch·ªëi"} l·ªùi m·ªùi.`);
    } catch {
      setError("Kh√¥ng th·ªÉ x·ª≠ l√Ω l·ªùi m·ªùi.");
    }
  };

  return (
    <div className="friends-page">
      <h2>üë• Danh s√°ch b·∫°n b√®</h2>

      {error && <p style={{ color: "red" }}>{error}</p>}
      {success && <p style={{ color: "green" }}>{success}</p>}

      <div className="search-bar">
        <input
          type="text"
          placeholder="Nh·∫≠p ID ng∆∞·ªùi d√πng..."
          value={searchText}
          onChange={(e) => setSearchText(e.target.value)}
        />
        <button onClick={handleSearch}>T√¨m ki·∫øm</button>
      </div>

      {searchResult && (
        <div className="search-results">
          <h3>K·∫øt qu·∫£ t√¨m ki·∫øm:</h3>
          <p>{searchResult.userid}</p>
          <button onClick={handleAddFriend}>Th√™m b·∫°n</button>
        </div>
      )}

      <div className="friends-list">
        <h3>Danh s√°ch b·∫°n b√®:</h3>
        {friends.length > 0 ? (
          <ul>
            {friends.map((friend) => (
              <li key={friend.userid}>
                {friend.userid} - {friend.days_friends} ng√†y l√†m b·∫°n
              </li>
            ))}
          </ul>
        ) : (
          <p>B·∫°n ch∆∞a c√≥ b·∫°n b√® n√†o.</p>
        )}
      </div>

      <div className="friend-requests">
        <h3>L·ªùi m·ªùi k·∫øt b·∫°n:</h3>
        {requests.length > 0 ? (
          <ul>
            {requests.map((req) => (
              <li key={req.id}>
                {req.from_user} g·ª≠i l·ªùi m·ªùi l√∫c{" "}
                {new Date(req.created_at).toLocaleString()}
                <div style={{ marginTop: "5px" }}>
                  <button onClick={() => handleRespond(req.id, "accept")}>
                    ‚úÖ Ch·∫•p nh·∫≠n
                  </button>
                  <button
                    onClick={() => handleRespond(req.id, "reject")}
                    style={{ marginLeft: "8px" }}
                  >
                    ‚ùå T·ª´ ch·ªëi
                  </button>
                </div>
              </li>
            ))}
          </ul>
        ) : (
          <p>Kh√¥ng c√≥ l·ªùi m·ªùi n√†o.</p>
        )}
      </div>
    </div>
  );
}

export default Friends;
